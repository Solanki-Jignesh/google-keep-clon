{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jignesh\\\\OneDrive\\\\Desktop\\\\google-keep-clon\\\\google-keep-clon2\\\\src\\\\components\\\\Googlekeep.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Createnote from \"./Createnote\";\nimport Keepnote from \"./Keepnote\";\nimport \"../Style/googlekeep.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Googlekeep = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const addnewNote = newnote => {\n    setNotes(previous => {\n      // if (newnote.title === \"\" || newnote.content === \"\") {\n      //   // alert(\"Please enter\");\n      //   return [...previous];\n      // } else {\n      //   return [...previous, newnote];\n      // }\n      return [...previous, newnote];\n    });\n  };\n  const deletenote = id => {\n    setNotes(previous => {\n      return previous.filter((noteitem, index) => {\n        return index !== id;\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Createnote, {\n      onAdd: addnewNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keep-notes-section\",\n      children: notes.map((addnote, index) => {\n        return /*#__PURE__*/_jsxDEV(Keepnote, {\n          id: index,\n          title: addnote.title,\n          content: addnote.content,\n          ondelete: deletenote\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Googlekeep, \"GQLmJKrKSWtt27ULSmYSMpXke/c=\");\n_c = Googlekeep;\nexport default Googlekeep;\nvar _c;\n$RefreshReg$(_c, \"Googlekeep\");","map":{"version":3,"names":["React","useState","Createnote","Keepnote","jsxDEV","_jsxDEV","Fragment","_Fragment","Googlekeep","_s","notes","setNotes","addnewNote","newnote","previous","deletenote","id","filter","noteitem","index","children","onAdd","fileName","_jsxFileName","lineNumber","columnNumber","className","map","addnote","title","content","ondelete","_c","$RefreshReg$"],"sources":["C:/Users/Jignesh/OneDrive/Desktop/google-keep-clon/google-keep-clon2/src/components/Googlekeep.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Createnote from \"./Createnote\";\r\nimport Keepnote from \"./Keepnote\";\r\nimport \"../Style/googlekeep.css\";\r\n\r\nconst Googlekeep = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const addnewNote = (newnote) => {\r\n    setNotes((previous) => {\r\n      // if (newnote.title === \"\" || newnote.content === \"\") {\r\n      //   // alert(\"Please enter\");\r\n      //   return [...previous];\r\n      // } else {\r\n      //   return [...previous, newnote];\r\n      // }\r\n      return [...previous, newnote];\r\n    });\r\n  };\r\n  const deletenote = (id) => {\r\n    setNotes((previous) => {\r\n      return previous.filter((noteitem, index) => {\r\n        return index !== id;\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Createnote onAdd={addnewNote} />\r\n      <div className=\"keep-notes-section\">\r\n        {notes.map((addnote, index) => {\r\n          return (\r\n            <Keepnote\r\n              key={index}\r\n              id={index}\r\n              title={addnote.title}\r\n              content={addnote.content}\r\n              ondelete={deletenote}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Googlekeep;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,UAAU,GAAIC,OAAO,IAAK;IAC9BF,QAAQ,CAAEG,QAAQ,IAAK;MACrB;MACA;MACA;MACA;MACA;MACA;MACA,OAAO,CAAC,GAAGA,QAAQ,EAAED,OAAO,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC;EACD,MAAME,UAAU,GAAIC,EAAE,IAAK;IACzBL,QAAQ,CAAEG,QAAQ,IAAK;MACrB,OAAOA,QAAQ,CAACG,MAAM,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;QAC1C,OAAOA,KAAK,KAAKH,EAAE;MACrB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAED,oBACEX,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACEf,OAAA,CAACH,UAAU;MAACmB,KAAK,EAAET;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCpB,OAAA;MAAKqB,SAAS,EAAC,oBAAoB;MAAAN,QAAA,EAChCV,KAAK,CAACiB,GAAG,CAAC,CAACC,OAAO,EAAET,KAAK,KAAK;QAC7B,oBACEd,OAAA,CAACF,QAAQ;UAEPa,EAAE,EAAEG,KAAM;UACVU,KAAK,EAAED,OAAO,CAACC,KAAM;UACrBC,OAAO,EAAEF,OAAO,CAACE,OAAQ;UACzBC,QAAQ,EAAEhB;QAAW,GAJhBI,KAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKX,CAAC;MAEN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAChB,EAAA,CAvCID,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}