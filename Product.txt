using var transaction = await _context.Database.BeginTransactionAsync();

try
{
    _context.Products.Add(product);
    await _context.SaveChangesAsync();  // Get ProductId

    foreach (var image in productImages)
    {
        image.ProductId = product.ProductId;
        _context.ProductImages.Add(image);
    }

    await _context.SaveChangesAsync();
    await transaction.CommitAsync();

    return product.ProductId;
}
catch
{
    await transaction.RollbackAsync();
    throw;
}


--------------------------------------------------------------------------------------------------------------------------------------------------------------------
public async Task UpdateProductAsync(Product product, List<ProductImage> newImages)
{
    using var transaction = await _context.Database.BeginTransactionAsync();

    try
    {
        // Update Product
        _context.Products.Update(product);
        await _context.SaveChangesAsync();

        // Remove old images
        var oldImages = _context.ProductImages.Where(pi => pi.ProductId == product.ProductId);
        _context.ProductImages.RemoveRange(oldImages);
        await _context.SaveChangesAsync();

        // Add new images
        foreach (var img in newImages)
        {
            img.ProductId = product.ProductId;
            _context.ProductImages.Add(img);
        }

        await _context.SaveChangesAsync();
        await transaction.CommitAsync();
    }
    catch
    {
        await transaction.RollbackAsync();
        throw;
    }
}
